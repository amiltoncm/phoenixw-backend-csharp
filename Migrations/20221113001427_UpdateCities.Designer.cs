// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Phoenix.Data;

#nullable disable

namespace Phoenix.Migrations
{
    [DbContext(typeof(PhoenixContext))]
    [Migration("20221113001427_UpdateCities")]
    partial class UpdateCities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Phoenix.Domains.PersonType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("pet_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("pet_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "idx_pet_name")
                        .IsUnique();

                    b.ToTable("person_types");
                });

            modelBuilder.Entity("Phoenix.Domains.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sta_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "idx_sta_name")
                        .IsUnique();

                    b.ToTable("status");
                });

            modelBuilder.Entity("Phoenix.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cti_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("cti_code");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cti_created");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cti_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("ste_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("sta_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cti_updated");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Name" }, "idx_cti_name");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("Phoenix.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cnt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cnt_created");

                    b.Property<string>("Iso2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("cnt_iso2");

                    b.Property<string>("Iso3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("cnt_iso3");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cnt_name");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("sta_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cnt_updated");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Iso2" }, "idx_cnt_iso2")
                        .IsUnique();

                    b.HasIndex(new[] { "Iso3" }, "idx_cnt_iso3")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "idx_cnt_name")
                        .IsUnique();

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Phoenix.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("pro_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "idx_pro_name")
                        .IsUnique();

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("Phoenix.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ste_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("ste_abbreviation");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("ste_code");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("cnt_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ste_created");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ste_name");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("sta_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ste_updated");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Name" }, "idx_ste_name");

                    b.ToTable("states");
                });

            modelBuilder.Entity("Phoenix.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("usr_created");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("usr_deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)")
                        .HasColumnName("usr_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("usr_name");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("usr_password");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("sta_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("usr_updated");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Name" }, "idx_usr_name")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Phoenix.Models.City", b =>
                {
                    b.HasOne("Phoenix.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phoenix.Domains.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Phoenix.Models.Country", b =>
                {
                    b.HasOne("Phoenix.Domains.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Phoenix.Models.State", b =>
                {
                    b.HasOne("Phoenix.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phoenix.Domains.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Phoenix.Models.User", b =>
                {
                    b.HasOne("Phoenix.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phoenix.Domains.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
